<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e33d2be7-d144-4082-935d-56ac9ab93c59" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/logs/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/log/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/logs/log_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/log/log_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1moU8Ml4qgtZjObvkSDMwI3fL3r" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="go.vgo" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\self\smokeCore\core" />
      <recent name="E:\self\smokeCore\core\.github" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\self\smokeCore\core\smoke\cmd" />
      <recent name="E:\self\smokeCore\core\smoke\conf" />
      <recent name="E:\self\smokeCore\core" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestJwt_Parse in github.com/accessions/core/jwt/test">
    <configuration name="TestJwt_Builder in github.com/accessions/core/jwt/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core" />
      <working_directory value="$PROJECT_DIR$/jwt/test" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/accessions/core/jwt/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestJwt_Builder\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestJwt_Parse in github.com/accessions/core/jwt/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core" />
      <working_directory value="$PROJECT_DIR$/jwt/test" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/accessions/core/jwt/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestJwt_Parse\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRedis_Client in github.com/accessions/core/gredis/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core" />
      <working_directory value="$PROJECT_DIR$/gredis/test" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/accessions/core/gredis/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestRedis_Client\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestRedis_Cluster in github.com/accessions/core/gredis/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core" />
      <working_directory value="$PROJECT_DIR$/gredis/test" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/accessions/core/gredis/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestRedis_Cluster\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_GetConfig in github.com/accessions/core/apollo/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core" />
      <working_directory value="$PROJECT_DIR$/apollo/test" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/accessions/core/apollo/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTest_GetConfig\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestJwt_Parse in github.com/accessions/core/jwt/test" />
        <item itemvalue="Go Test.TestJwt_Builder in github.com/accessions/core/jwt/test" />
        <item itemvalue="Go Test.TestRedis_Cluster in github.com/accessions/core/gredis/test" />
        <item itemvalue="Go Test.TestRedis_Client in github.com/accessions/core/gredis/test" />
        <item itemvalue="Go Test.Test_GetConfig in github.com/accessions/core/apollo/test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <environment>
      <map>
        <entry key="GOPROXY" value="https://goproxy.cn/,direct" />
      </map>
    </environment>
  </component>
</project>